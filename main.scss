@import 'o-buttons/main';
@import 'o-colors/main';
@import 'o-icons/main';
@import 'o-typography/main';

@import './src/scss/color-use-cases';
@import './src/scss/brand';
@import './src/scss/mixins';
@import './src/scss/variables';

@import './src/scss/base';
@import './src/scss/state';

/// Output all oMessage features
/// @param {list} $opts [('alert', 'notice', 'action', 'inner'))]
/// @param {list} $status [('error', 'success', 'inform', 'neutral', 'inform-inverse', 'warning', 'warning-light')]

@mixin oMessage (
	$opts: ('action', 'alert', 'notice', 'inner'),
	$states: ('error', 'success', 'neutral', 'inform', 'inform-inverse', 'warning', 'warning-light')
) {
	$action: index($opts, 'action');
	$alert: index($opts, 'alert');
	$notice: index($opts, 'notice');
	$inner: index($opts, 'inner');

	@include _oMessageBase();

	@each $state in $states {
		@if index($o-message-states, $state) and _oMessageSupports($state) {
			@include _oMessageState($state);
		}
	}

	@if $inner {
		@include _oMessageInner();
	}

	@if $action and _oMessageSupports('action') {
		@include _oMessageType('action');
	}

	@if $alert {
		@include _oMessageType('alert');
	}

	@if $notice {
		@include _oMessageType('notice');
	}
}

@if ($o-message-is-silent == false) {
	@include oMessage();

	// Set to silent again to avoid being output twice
	$o-message-is-silent: true !global;
}
