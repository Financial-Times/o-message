@import 'o-buttons/main';
@import 'o-colors/main';
@import 'o-grid/main';
@import 'o-icons/main';
@import 'o-typography/main';

@import './src/scss/color-use-cases';
@import './src/scss/brand';
@import './src/scss/mixins';
@import './src/scss/variables';

@import './src/scss/base';
@import './src/scss/state';

/// Output all oMessage features
/// @param {Map} $opts ['types': ('alert', 'notice', 'action), 'inner': true, 'states': ('error', 'success', 'inform', 'neutral', 'inform-inverse', 'warning', 'warning-light')]

@mixin oMessage ($opts: (
	'type': ('action', 'alert', 'notice'),
	'inner': true,
	'states': ('error', 'success', 'neutral', 'inform', 'inform-inverse', 'warning', 'warning-light')
)) {
	$types: map-get($opts, 'type');
	$states: map-get($opts, 'states');
	$inner: map-get($opts, 'inner');

	@include _oMessageBase();

	@each $state in $states {
		@if index($o-message-states, $state) and _oMessageSupports($state) {
			@include _oMessageState($state);
		}
	}

	@each $type in $types {
		@if _oMessageSupports($type) {
			@include _oMessageType($type);
		}
	}

	@if $inner {
		@include _oMessageInner();
	}
}

@if ($o-message-is-silent == false) {
	@include oMessage();

	// Set to silent again to avoid being output twice
	$o-message-is-silent: true !global;
}
