@mixin oMessageAlertIcon ($icon-name, $icon-color, $icon-size) {
	content: '';
	@include oIconsGetIcon(
		$icon-name,
		$icon-color,
		$icon-size
	);
}

@mixin oMessageAlertContent () {
	@include oTypographyMargin($top: 0, $bottom: 0);
	display: flex;
	align-items: center;

	&--highlight {
		@include oTypographySansBold($scale: 0);
		padding-right: oTypographySpacingSize(2);
	}
}

@mixin oMessageAlertButtonTheme ($background, $text) {
	@include oButtonsCustomTheme($background, $text);
}

@mixin oMessageAlertButtonBase () {
	@include oMessageButtonBase;
	margin: oTypographySpacingSize(6);
}

@mixin oMessageAlertLink ($custom-link-base, $custom-link-hover, $custom-link-background, $link-hover, $link-focus) {
	@include oTypographyLinkCustom(
		$custom-link-base,
		$custom-link-hover,
		$custom-link-background
	);
	
	&:hover {
		border-bottom-color: $link-hover; // is different to custom link hover by design.
	}
	
	&:focus {
		outline: 3px solid $link-focus;
		border-bottom-color: transparent;
	}
}

@mixin oMessageAlertGrid () {
	@include oGridContainer();
	@include oGridRespondTo($from: S) {
		padding: oGridGutter();
	}
}

@mixin oMessageAlertBase($class: 'o-message') {
	.#{$class}--alert,
	.#{$class}--alert--bleed {
		height: $_o-message-alert-height;
	}
	
	.#{$class}__container {
		@include oMessageContainer;
		
		.#{$class}--alert--bleed & {
			@include oMessageAlertGrid;
		}
		
		.#{$class}__content {
			@include oMessageAlertContent;
		}
	}
	
	.#{$class}__button {
		@include oMessageAlertButtonBase;
	}
	
	.#{$class}__close {
		margin-left: auto;
	}
	
	.#{$class}--closed {
		display: none;
	}
	
	.#{$class}--alert {
		@include oMessageAlertGrid;

		@include oGridRespondTo($until: S) {
			.#{$class}__action--secondary {
				display: none;
			}
		};
	
		@include oGridRespondTo($until: M) {
			.#{$class}__content--detail {
				display: none;
			}
		};
	}
}


@mixin oMessageFor ($theme, $class: 'o-message') {
	@if map-has-key($theme-styles, $theme) {
		.#{$class}--alert-#{$theme} {
			@include oColorsFor(o-message-alert-#{$theme});

			.#{$class}__link {
				@include oMessageAlertLink(
					$custom-link-base: _oMessageGetMapValue($theme, custom-link-base),
					$custom-link-hover: _oMessageGetMapValue($theme, custom-link-hover),
					$custom-link-background: _oMessageGetMapValue($theme, custom-link-background),
					$link-hover: _oMessageGetMapValue($theme, link-hover),
					$link-focus: _oMessageGetMapValue($theme, link-focus)
				);
			}

			.#{$class}__button {
				@include oMessageAlertButtonTheme(_oMessageGetMapValue($theme, button-background), _oMessageGetMapValue($theme, button-text));
			}

			.#{$class}__content:before {
				@include oMessageAlertIcon(
					_oMessageGetMapValue($theme, alert-icon-name),
					_oMessageGetMapValue($theme, alert-icon-color),
					_oMessageGetMapValue($theme, alert-icon-size)
				);
			}

			.#{$class}__close {
				@include oMessageCloseButton(_oMessageGetMapValue($theme, close-icon-color));
			}
		}
	} @else {
		@return _oMessageError("#{$theme} is not a theme. You can try 'error', 'success' or 'neutral', instead.");
	}
}
