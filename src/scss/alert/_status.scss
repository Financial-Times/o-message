@import 'src/scss/alert/status-map';

@mixin oMessageStatus ($status, $class) {
	@if map-has-key($_o-message-status-styles, $status) {
		.#{$class}--#{$status} {
			@include oColorsFor(o-message-alert-#{$status});

			.#{$class}__action--primary {
				@include oMessageAlertButtonTheme(
				_oMessageGetMapValue($status, button-background),
				_oMessageGetMapValue($status, button-text)
				);
			}

			.#{$class}__action--secondary {
				@include oMessageAlertLink(
					$custom-link-base: _oMessageGetMapValue($status, custom-link-base),
					$custom-link-hover: _oMessageGetMapValue($status, custom-link-hover),
					$custom-link-background: _oMessageGetMapValue($status, custom-link-background),
					$link-hover: _oMessageGetMapValue($status, link-hover),
					$link-focus: _oMessageGetMapValue($status, link-focus)
				);
			}

			.#{$class}__container:before {
				@include oMessageAlertIcon(
					_oMessageGetMapValue($status, alert-icon-name),
					_oMessageGetMapValue($status, alert-icon-color),
					_oMessageGetMapValue($status, alert-icon-size)
				);
			}

			.#{$class}__close {
				@include oMessageCloseButton(_oMessageGetMapValue($status, close-icon-color));
			}
		}
	} @else {
		@return _oMessageError("#{$status} is not a status. You can try 'error', 'success' or 'neutral', instead.");
	}
}
